##1. Square Numbers and Return Their Sum

class point:
    def __init__(self,x,y,z):
        self.x=x
        self.y=y
        self.z=z
    def sqsum(self):
        return str(self.x**2+self.y**2+self.z**2)

if __name__=='__main__':
    x=int(input('Enter x value:'))
    y=int(input('Enter y value:'))
    z=int(input('Enter z value:'))
    sqs=point(x,y,z)
    print(sqs.sqsum())
___________________________________________________________________________________________________________________________________________

##2. Implement a Calculator Class

class calc:
    def __init__(self,n1,n2):
        self.n1=n1
        self.n2=n2
    def sum(self):
        print(str(self.n1+self.n2))
    def sub(self):
        print(str(self.n1-self.n2))
    def mul(self):
        print(str(self.n1*self.n2))
    def div(self):
        print(str(self.n1/self.n2))

if __name__=='__main__':
    n1=int(input('Enter number1:'))
    n2=int(input('Enter number2:'))
    ans=calc(n1,n2)
    ans.sum()
    ans.sub()
    ans.mul()
    ans.div()
_________________________________________________________________________________________________________________________________________

##3. Implement the Complete Student Class

class Student:
    def setName(self, name):
        self.name = name
    def getName(self):
        return self.name
    def setRollNumber(self, rollNumber):
        self.rollNumber = rollNumber
    def getRollNumber(self):
        return self.rollNumber

name = input("Enter Name: ")
rollNumber = input("Enter Roll number: ")
student = Student()
student.setName(name)
student.setRollNumber(rollNumber)
print("Student Name:", student.getName())
print("Roll Number:", student.getRollNumber())
____________________________________________________________________________________________________________________________________

## 4.Implement a Banking Account

class Account:
    def __init__(self, title, balance):
        self.title = title
        self.balance = balance

class SavingsAccount(Account):
    def __init__(self, title, balance, interestRate):
        super().__init__(title, balance)
        self.interestRate = interestRate

title = input("Enter account title: ")
balance = int(input("Enter account balance: "))
interestRate = float(input("Enter interest rate: "))
acnt = SavingsAccount(title, balance, interestRate)
print("Account title:", acnt.title)
print("Account balance:", acnt.balance)
print("Interest rate:", acnt.interestRate)
___________________________________________________________________________________________________________________________________________________

## 5.Handling a Bank Account

class Account:
    def __init__(self, title=None, balance=0):
        self.title = title
        self.balance = balance
    def withdrawal(self, amount):
        if amount > 0 and amount <= self.balance:
            self.balance -= amount
            print("Withdrawal successful")
        else:
            print("Insufficient balance")
    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            print("Deposit successful")
        else:
            print("Invalid amount")
    def getBalance(self):
        return self.balance

class SavingsAccount(Account):
    def __init__(self, title=None, balance=0, interestRate=0):
        super().__init__(title, balance)
        self.interestRate = interestRate
    def interest(self):
        return self.balance * self.interestRate / 100

title = input("Enter account Title: ")
balance = int(input("Enter account balance: "))
interestRate = float(input("Enter Interest rate: "))
withdraw = int(input("Enter Withdrawal amount: "))
deposit = int(input("Enter deposit amount: "))
saving = SavingsAccount(title, balance, interestRate)
saving.withdrawal(withdraw)
saving.deposit(deposit)
print("Current balance:", saving.getBalance())
print("Interest:", saving.interest())









